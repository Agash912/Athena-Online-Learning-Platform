/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;
import model.*;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author agash
 */
public class Stu_register_newcourse extends javax.swing.JPanel {

    /**
     * Creates new form Stu_register_newcourse
     */
    private Student_details_list students;
    private Professor_details_list professors;
    private Course_details_list  courses;
    private JPanel bottom_panel;
    private Student_details student_details;
    private String to_search_value;
    private int key;
    private ArrayList<Object> to_add = new ArrayList<>();
    private ArrayList<ArrayList<Object>> courses_registered = new ArrayList<>();
    private String topic;
    private Course_details now_registered;
    private int Counter;
    
    
    public Stu_register_newcourse(JPanel bottom_panel, Student_details_list students, Professor_details_list professors, Course_details_list courses, Student_details student_details) {
        initComponents();
        this.bottom_panel = bottom_panel;
        this.students = students;
        this.professors = professors;
        this.courses = courses; 
        this.student_details = student_details;
        this.courses_registered = student_details.getCourses_registered();
        
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        
        for (Course_details course_details: courses.getCourse_details_list()){
     
                Object[] row = new Object[7];
                row[0] = course_details.getTopic();
                row[1] = course_details.getProf();
                row[2] = course_details.getCourse_schedule();
                row[3] = course_details.getUseful_for();
                row[4] = course_details.getLanguage();
                row[5] = course_details.getTerm();
                row[6] = course_details.getRegion();
                dtm.addRow(row);
                
            }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txt_search = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txt_syllabus = new javax.swing.JTextField();
        btn_register = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txt_rating = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txt_spl = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setLayout(null);

        jLabel8.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Student Portal");
        add(jLabel8);
        jLabel8.setBounds(0, 6, 1500, 41);

        jLabel1.setText("Enter the Keyword");
        add(jLabel1);
        jLabel1.setBounds(542, 140, 108, 17);
        add(txt_search);
        txt_search.setBounds(679, 137, 142, 23);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Professor_Name", "Topic", "Region", "Language", "Term" }));
        add(jComboBox1);
        jComboBox1.setBounds(851, 137, 131, 23);

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(716, 194, 72, 23);

        jLabel6.setText("Syllabus");
        add(jLabel6);
        jLabel6.setBounds(450, 612, 50, 17);

        txt_syllabus.setEditable(false);
        add(txt_syllabus);
        txt_syllabus.setBounds(518, 595, 343, 52);

        btn_register.setText("Register");
        btn_register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registerActionPerformed(evt);
            }
        });
        add(btn_register);
        btn_register.setBounds(736, 665, 78, 23);

        jButton3.setText("<Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3);
        jButton3.setBounds(736, 694, 78, 23);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Topic", "Professor", "Schedule", "Useful for", "Language", "Term", "Region"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1);
        jScrollPane1.setBounds(6, 249, 1488, 195);

        jButton4.setText("View Details");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4);
        jButton4.setBounds(725, 554, 102, 23);

        jLabel7.setText("Professor Rating");
        add(jLabel7);
        jLabel7.setBounds(894, 591, 96, 17);

        txt_rating.setEditable(false);
        add(txt_rating);
        txt_rating.setBounds(996, 588, 142, 23);

        jLabel9.setText("Professor Speciality");
        add(jLabel9);
        jLabel9.setBounds(867, 623, 116, 17);

        txt_spl.setEditable(false);
        add(txt_spl);
        txt_spl.setBounds(989, 620, 142, 23);

        jLabel2.setIcon(new javax.swing.ImageIcon("/Users/agash/Documents/The Boys/Student.png")); // NOI18N
        add(jLabel2);
        jLabel2.setBounds(2, -3, 1500, 1000);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        bottom_panel.remove(this);
        CardLayout layout = (CardLayout) bottom_panel.getLayout();
        layout.previous(bottom_panel);          
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btn_registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registerActionPerformed
        // TODO add your handling code here:
        
        int selected = jTable1.getSelectedRow();
        
        if (selected<0){
            JOptionPane.showMessageDialog(this, "No course selected");
            return;
        }
        
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        this.topic = (String)dtm.getValueAt(selected, 0);
        
        
        
        
        String prof_name = (String)dtm.getValueAt(selected, 1);
        
        for (Course_details course_details: courses.getCourse_details_list()){
       
            if (topic.equals(course_details.getTopic())){
                this.now_registered = course_details;
                txt_syllabus.setText(course_details.getSyllabus());
            }

        }
        
        for (Professor_details professor_details: professors.getProfessor_list()){
            
            if (professor_details.getName().equals(prof_name)){
                txt_rating.setText(String.valueOf(professor_details.calculateAverage(professor_details.getRating())));
            }
        }
        
        to_add.add(this.now_registered);
        to_add.add("Yet to take Exam");
        Counter = 0;
        for (ArrayList<Object> item : courses_registered) {
            Counter+=1;
            Course_details course = (Course_details) item.get(0);
            if (course.getTopic().equals(now_registered.getTopic())){
                JOptionPane.showMessageDialog(null, "Cannot re-register to already enrolled course!");
                bottom_panel.remove(this);
                CardLayout layout = (CardLayout) bottom_panel.getLayout();
                layout.previous(bottom_panel); 
            }
            else if(Counter == 8){
                JOptionPane.showMessageDialog(null, "You can only register for a maximum of 8 courses");
                bottom_panel.remove(this);
                CardLayout layout = (CardLayout) bottom_panel.getLayout();
                layout.previous(bottom_panel); 
            }
        } 
        
        
        this.courses_registered.add(to_add);
       
        student_details.setCourses_registered(this.courses_registered);
        
        JOptionPane.showMessageDialog(null, "Registered Successfully!");
        
        bottom_panel.remove(this);
        CardLayout layout = (CardLayout) bottom_panel.getLayout();
        layout.previous(bottom_panel);          
        
    }//GEN-LAST:event_btn_registerActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        to_search_value = String.valueOf(jComboBox1.getSelectedItem());
        key = jComboBox1.getSelectedIndex();
        
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
        
        for (Course_details course_details: courses.getCourse_details_list()){
            
            if (key == 0 && txt_search.getText().contains(course_details.getProf())){
                Object[] row = new Object[7];
                row[0] = course_details.getTopic();
                row[1] = course_details.getProf();
                row[2] = course_details.getCourse_schedule();
                row[3] = course_details.getUseful_for();
                row[4] = course_details.getLanguage();
                row[5] = course_details.getTerm();
                row[6] = course_details.getRegion();
                dtm.addRow(row);
                
            }
            else if (key ==1 && txt_search.getText().contains(course_details.getTopic())){
                Object[] row = new Object[7];
                row[0] = course_details.getTopic();
                row[1] = course_details.getProf();
                row[2] = course_details.getCourse_schedule();
                row[3] = course_details.getUseful_for();
                row[4] = course_details.getLanguage();
                row[5] = course_details.getTerm();
                row[6] = course_details.getRegion();
                dtm.addRow(row);
            }
            else if (key == 2 && txt_search.getText().contains(course_details.getRegion())){
                Object[] row = new Object[7];
                row[0] = course_details.getTopic();
                row[1] = course_details.getProf();
                row[2] = course_details.getCourse_schedule();
                row[3] = course_details.getUseful_for();
                row[4] = course_details.getLanguage();
                row[5] = course_details.getTerm();
                row[6] = course_details.getRegion();
                dtm.addRow(row);
            }
            else if (key ==3 && txt_search.getText().contains(course_details.getLanguage())){
                Object[] row = new Object[7];
                row[0] = course_details.getTopic();
                row[1] = course_details.getProf();
                row[2] = course_details.getCourse_schedule();
                row[3] = course_details.getUseful_for();
                row[4] = course_details.getLanguage();
                row[5] = course_details.getTerm();
                row[6] = course_details.getRegion();
                dtm.addRow(row);                
            }
            else if (key == 4 && txt_search.getText().contains(course_details.getTerm())){
                Object[] row = new Object[7];
                row[0] = course_details.getTopic();
                row[1] = course_details.getProf();
                row[2] = course_details.getCourse_schedule();
                row[3] = course_details.getUseful_for();
                row[4] = course_details.getLanguage();
                row[5] = course_details.getTerm();
                row[6] = course_details.getRegion();
                dtm.addRow(row);                 
            }
            
        }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        int selected = jTable1.getSelectedRow();
        
        if (selected<0){
            JOptionPane.showMessageDialog(this, "No course selected");
            return;
        }
        
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        this.topic = (String)dtm.getValueAt(selected, 0);
        String prof_name = (String)dtm.getValueAt(selected, 1);
        
        for (Course_details course_details: courses.getCourse_details_list()){
       
            if (topic.equals(course_details.getTopic())){
                this.now_registered = course_details;
                txt_syllabus.setText(course_details.getSyllabus());
            }

        }
        
        for (Professor_details professor_details: professors.getProfessor_list()){
            
            if (professor_details.getName().equals(prof_name)){
                txt_rating.setText(String.valueOf(professor_details.calculateAverage(professor_details.getRating())));
                txt_spl.setText(professor_details.getSpeciality());
            }
        }
        
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_register;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_rating;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_spl;
    private javax.swing.JTextField txt_syllabus;
    // End of variables declaration//GEN-END:variables
}
